---
format_version: 1.3.0
default_step_lib_source: 'https://github.com/bitrise-io/bitrise-steplib.git'
trigger_map:
- push_branch: develop
  workflow: Entourage-Beta
workflows:
  Entourage-TestFlight:
    steps:
    - activate-ssh-key:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone:
        inputs:
        - commit: ''
        - tag: ''
    - cache-pull: {}
    - cocoapods-install:
        inputs:
        - verbose: 'false'
    - ios-auto-provision-appstoreconnect@0:
        inputs:
        - distribution_type: app-store
    - script:
        inputs:
        - content: >-
            #!/bin/bash

            # fail if any commands fails

            set -e

            # debug log

            #set -x


            echo "Download App credentials"


            app_configurations_file=$BITRISE_SOURCE_DIR/AppConfigurations.plist


            # download the files

            wget -O "$app_configurations_file"
            "$BITRISEIO_APPCONFIGURATIONS_URL"
    - xcode-archive:
        inputs:
        - export_method: app-store
    - deploy-to-bitrise-io:
        inputs:
        - notify_user_groups: none
        - deploy_path: $BITRISE_IPA_PATH
    - deploy-to-itunesconnect-application-loader:
        inputs:
        - password: $FASTLANE_PASSWORD
        - itunescon_user: $APPLE_ID
    - deploy-to-bitrise-io:
        is_always_run: false
        inputs:
        - notify_user_groups: none
    - slack:
        inputs:
        - channel: '#iosdev'
        - from_username: Entourage-Beta
        - from_username_on_error: Entourage-Beta
        - message: >-
            New *Entourage-Beta DEV* iOS build is available:
            $BITRISE_BUILD_NUMBER  here:

            $BITRISE_APP_URL
        - message_on_error: >-
            Oups, build has failed for Entourage iOS... @here
        - pretext: '*Entourage-Beta Build Succeeded!*'
        - pretext_on_error: '*Build Failed for Entourage Beta!*'
        - api_token: $SLACK_BOT_API_TOKEN
        - fields: |
            App|${BITRISE_APP_TITLE}
            Branch|${BITRISE_GIT_BRANCH}
            Workflow|${BITRISE_TRIGGERED_WORKFLOW_ID}
            Jira|<${JIRA_BASE_URL}browse/${JIRA_ISSUE_KEYS}|${JIRA_ISSUE_KEYS}>
    - git-tag-project-version-and-build-number@1:
        inputs:
        - bitrise_tag_info_plist_path: entourage-Info.plist
        - bitrise_tag_format: Ent_VERSION
    - firebase-dsym-upload@1:
        inputs:
        - fdu_fabric_location: ./Pods/Fabric/upload-symbols
        - fdu_google_services_location: ./entourage/Settings/Environment
        is_always_run: true
    - cache-push:
        is_always_run: true
  Entourage-Beta:
    steps:
    - activate-ssh-key:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone:
        inputs:
        - commit: ''
        - tag: ''
    - cache-pull: {}
    - cocoapods-install:
        inputs:
        - verbose: 'false'
    - ruby-script:
        inputs:
        - ruby_content: |-
            PROJECT_KEY = 'EN'
            RESULT_ENV_VARIABLE = 'JIRA_ISSUE_KEYS'

            puts "Searching issue keys in environment variables"

            ISSUE_KEY_REGEXP = /#{PROJECT_KEY}-\d+/
            issue_keys = []

            [
              :BITRISE_GIT_BRANCH,
              :GIT_CLONE_COMMIT_MESSAGE_SUBJECT,
              :GIT_CLONE_COMMIT_MESSAGE_BODY
            ].each do |var|
              print "#{var}: "
              value = ENV[var.to_s]
              if value.nil?
                puts "(not set)"
                next
              end
              var_issue_keys = value.scan(ISSUE_KEY_REGEXP).uniq
              puts var_issue_keys.inspect
              issue_keys += var_issue_keys
            end

            issue_keys.uniq!

            puts


            puts "Issue keys found:"
            puts issue_keys.inspect
            puts

            if issue_keys.none?
              puts "No issue key found, $#{RESULT_ENV_VARIABLE} has not been set."
            else
              issue_keys = issue_keys.join('|')
              puts "Setting $#{RESULT_ENV_VARIABLE} to '#{issue_keys}'."
              system(
                'envman', 'add',
                '--key', RESULT_ENV_VARIABLE.to_s,
                '--value', issue_keys
              )
            end
        - gemfile_content: ''
    - ios-auto-provision-appstoreconnect@0:
        inputs:
        - scheme: EntourageBeta
        - distribution_type: ad-hoc
    - script:
        inputs:
        - content: >-
            #!/bin/bash

            # fail if any commands fails

            set -e

            # debug log

            #set -x


            echo "Download App credentials"


            app_configurations_file=$BITRISE_SOURCE_DIR/AppConfigurations.plist


            # download the fileS

            wget -O "$app_configurations_file"
            "$BITRISEIO_APPCONFIGURATIONS_URL"
    - script:
        inputs:
        - content: >-
            #!/bin/bash

            # fail if any commands fails

            set -e

            # debug log

            #set -x


            echo "Install dependencies"


            #brew install librsvg

            #brew upgrade imagemagick

            #gem install badge


            curl https://codeload.github.com/ReseauEntourage/badge/tar.gz/master
            | tar xz

            pushd badge-master/

            gem build badge.gemspec

            gem install badge-0.9.1.gem

            popd

            rm -r badge-master/
    - fastlane:
        inputs:
        - lane: beta
    - deploy-to-bitrise-io: {}
    - post-jira-comment-with-build-details:
        inputs:
        - base_url: $JIRA_BASE_URL
        - api_token: $JIRA_API_TOKEN
        - user_name: $JIRA_USER_EMAIL
        - issue_keys: $JIRA_ISSUE_KEYS
    - slack:
        inputs:
        - channel: '#iosdev'
        - from_username: Entourage-Beta
        - from_username_on_error: Entourage-Beta
        - message: >-
            New *Entourage-Beta DEV* iOS build is available:
            $BITRISE_BUILD_NUMBER  here:

            $BITRISE_APP_URL
        - message_on_error: >-
            Oups, build has failed for Entourage iOS... @here
        - pretext: '*Entourage-Beta Build Succeeded!*'
        - pretext_on_error: '*Build Failed for Entourage Beta!*'
        - api_token: $SLACK_BOT_API_TOKEN
        - fields: |
            App|${BITRISE_APP_TITLE}
            Branch|${BITRISE_GIT_BRANCH}
            Workflow|${BITRISE_TRIGGERED_WORKFLOW_ID}
            Jira|<${JIRA_BASE_URL}browse/${JIRA_ISSUE_KEYS}|${JIRA_ISSUE_KEYS}>
    - cache-push: {}
  Entourage-NoFastlane:
    steps:
    - activate-ssh-key:
        run_if: '{{getenv "SSH_RSA_PRIVATE_KEY" | ne ""}}'
    - git-clone:
        inputs:
        - commit: ''
        - tag: ''
    - cache-pull: {}
    - cocoapods-install:
        inputs:
        - verbose: 'false'
    - ruby-script:
        inputs:
        - ruby_content: |-
            PROJECT_KEY = 'EN'
            RESULT_ENV_VARIABLE = 'JIRA_ISSUE_KEYS'

            puts "Searching issue keys in environment variables"

            ISSUE_KEY_REGEXP = /#{PROJECT_KEY}-\d+/
            issue_keys = []

            [
                :BITRISE_GIT_BRANCH,
                :GIT_CLONE_COMMIT_MESSAGE_SUBJECT,
                :GIT_CLONE_COMMIT_MESSAGE_BODY
            ].each do |var|
                print "#{var}: "
                value = ENV[var.to_s]
                if value.nil?
                puts "(not set)"
                next
                end
                var_issue_keys = value.scan(ISSUE_KEY_REGEXP).uniq
                puts var_issue_keys.inspect
                issue_keys += var_issue_keys
            end

            issue_keys.uniq!

            puts

            puts "Issue keys found:"
            puts issue_keys.inspect
            puts

            if issue_keys.none?
                puts "No issue key found, $#{RESULT_ENV_VARIABLE} has not been set."
            else
                issue_keys = issue_keys.join('|')
                puts "Setting $#{RESULT_ENV_VARIABLE} to '#{issue_keys}'."
                system(
                'envman', 'add',
                '--key', RESULT_ENV_VARIABLE.to_s,
                '--value', issue_keys
                )
            end
        - gemfile_content: ''
    - ios-auto-provision-appstoreconnect@0:
        inputs:
        - scheme: EntourageBeta
        - distribution_type: ad-hoc
    - script:
        inputs:
        - content: >-
            #!/bin/bash
            # fail if any commands fails
            set -e
            # debug log
            #set -x
            echo "Download App credentials"
            app_configurations_file=$BITRISE_SOURCE_DIR/AppConfigurations.plist
            # download the fileS
            wget -O "$app_configurations_file"
            "$BITRISEIO_APPCONFIGURATIONS_URL"
    - xcode-archive:
        inputs:
        - export_method: app-store
    - deploy-to-bitrise-io: {}
  BETA:
    steps:
    - trigger-bitrise-workflow:
        inputs:
        - api_token: $BUILD_TRIGGER
        - workflow_id: Entourage-Beta
app:
  envs:
  - opts:
      is_expand: false
    BITRISE_PROJECT_PATH: entourage.xcworkspace
  - opts:
      is_expand: false
    BITRISE_SCHEME: Entourage-ios
