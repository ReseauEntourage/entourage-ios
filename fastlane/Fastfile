# Customise this file, documentation can be found here: https://docs.fastlane.tools
# All available actions: https://docs.fastlane.tools/actions/
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.105.2"

default_platform :ios

platform :ios do

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to appaloosa"
  desc "This will also make sure the profile is up to date"
  lane :beta do |options|
    sigh(
     app_identifier: "social.entourage.entourageios.beta",
     username: "apple@entourage.social",
     adhoc: true,
     force: true
    )
    badge(
      dark: true
    )
    gym(
      clean: true,
      scheme: "EntourageBeta",
      output_directory: ENV["BITRISE_DEPLOY_DIR"]
      )
  end

  desc "Build a new Pfp-Beta"
  desc "This will also make sure the profile is up to date"
  lane :pfp_beta do |options|
    sigh(
     app_identifier: "social.entourage.entourageios.pfp.beta",
     username: "apple@entourage.social",
     adhoc: true,
     force: true
    )
    badge(
      dark: true
    )
    gym(
      clean: true,
      scheme: "PfpBeta",
      output_directory: ENV["BITRISE_DEPLOY_DIR"]
      )
  end

  private_lane :store do |options|
    build_app(
      scheme: options[:scheme]
    )

    upload(
      app_identifier: options[:app_identifier]
    ) if options[:upload] == 'true'
  end

  private_lane :upload do |options|
    upload_to_testflight(
      app_identifier: options[:app_identifier],
      ipa: Dir[File.join(ENV["BITRISE_DEPLOY_DIR"], "*.ipa")].sort_by { |x| File.mtime(x) }.last,
      skip_waiting_for_build_processing: true
    )
  end

  desc "Build Entourage for store release"
  desc "This will also make sure the profile is up to date"
  lane :entourage_store do |options|
    store(
      app_identifier: "social.entourage.entourageios",
      scheme: "EntourageStore"
    )
  end

  desc "Upload Entourage to TestFlight"
  lane :upload_entourage do |options|
    upload(
      app_identifier: "social.entourage.entourageios"
    )
  end

  desc "Submit a new Entourage Build to TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :deploy_to_TestFlight do |options|
    entourage_store
    upload_entourage
  end

  desc "Build Voisin-Age for store release"
  desc "This will also make sure the profile is up to date"
  lane :pfp_store do |options|
    store(
      app_identifier: "social.entourage.entourageios.pfp",
      scheme: "PfpStore"
    )
  end

  desc "Upload Voisin-Age to TestFlight"
  lane :upload_pfp do |options|
    upload(
      app_identifier: "social.entourage.entourageios.pfp"
    )
  end

  desc "Submit a new PFP Build to TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :deploy_PFP_to_TestFlight do |options|
    pfp_store
    upload_pfp
  end

  desc "Submit dSYMs to Crashlytics"
  lane :refresh_dsyms do
    download_dsyms # Download dSYM files from iTC
    upload_symbols_to_crashlytics # Upload them to Crashlytics
    clean_build_artifacts # Delete the local dSYM files
  end
# You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end
