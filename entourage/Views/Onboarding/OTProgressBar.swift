//
//  ProgressBar.swift
//  Entourage
//
//  Created by JR on 21/04/2020.
//  Copyright Â© 2020. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class OTProgressBar : NSObject {

    //// Cache

    private struct Cache {
        static let bg_active: UIColor = UIColor(red: 0.961, green: 0.373, blue: 0.141, alpha: 1.000)
        static let bg_background: UIColor = UIColor(red: 0.965, green: 0.965, blue: 0.965, alpha: 1.000)
    }

    //// Colors

    @objc dynamic public class var bg_active: UIColor { return Cache.bg_active }
    @objc dynamic public class var bg_background: UIColor { return Cache.bg_background }

    //// Drawing Methods

    @objc dynamic public class func drawBar(frame: CGRect = CGRect(x: 0, y: 0, width: 240, height: 6), progress: CGFloat = 93) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        // This non-generic function dramatically improves compilation times of complex expressions.
        func fastFloor(_ x: CGFloat) -> CGFloat { return floor(x) }

        //// progressBackground Drawing
        let progressBackgroundPath = UIBezierPath(roundedRect: CGRect(x: frame.minX + fastFloor(frame.width * 0.00000 + 0.5), y: frame.minY, width: fastFloor(frame.width * 1.00000 + 0.5) - fastFloor(frame.width * 0.00000 + 0.5), height: frame.height), cornerRadius: 3)
        OTProgressBar.bg_background.setFill()
        progressBackgroundPath.fill()


        //// progressActive Drawing
        context.saveGState()
        context.setAlpha(0.8)

        let progressActivePath = UIBezierPath(roundedRect: CGRect(x: 0, y: 0, width: progress, height: 6), cornerRadius: 3)
        OTProgressBar.bg_active.setFill()
        progressActivePath.fill()

        context.restoreGState()
    }

}

@IBDesignable
class OTProgressBarView: UIView {
    @IBInspectable
    var progressPercent:CGFloat = 10
    
    override func draw(_ rect: CGRect) {
        OTProgressBar.drawBar(frame: rect, progress: progressPercent)
    }
}
